{"version":3,"file":"ngx-material-file-input.umd.js.map","sources":["ng://ngx-material-file-input/lib/model/file-input-config.model.ts","ng://ngx-material-file-input/lib/model/file-input.model.ts","ng://ngx-material-file-input/lib/file-input/file-input.component.ts","ng://ngx-material-file-input/lib/pipe/byte-format.pipe.ts","ng://ngx-material-file-input/lib/material-file-input.module.ts","ng://ngx-material-file-input/lib/validator/file-validator.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[], private delimiter: string = ', ') {\n    this._fileNames = this._files.map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\nimport { FileInput } from '../model/file-input.model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  template: `<input #input id=\"md-input-file\" type=\"file\" [attr.multiple]=\"multiple? '' : null\">\n<span class=\"filename\">{{ fileNames }}</span>\n`,\n  styles: [`:host{display:inline-block}:host:not(.file-input-disabled){cursor:pointer}input{width:0;height:0;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block}`],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy {\n  static nextId = 0;\n\n  stateChanges = new Subject<void>();\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled: boolean = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput.files);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled() {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get errorState() {\n    return this.ngControl.errors !== null && this.ngControl.touched;\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  writeValue(obj: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: any) {\n    const fileList = event.target.files;\n    const fileArray = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport {\n  FileInputConfig,\n  NGX_MAT_FILE_INPUT_CONFIG\n} from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [\n      this.unit,\n      'K' + B,\n      'M' + B,\n      'G' + B,\n      'T' + B,\n      'P' + B,\n      'E' + B,\n      'Z' + B,\n      'Y' + B\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n\n    /**\n     * Function to control content of files\n     *\n     * @param bytes max number of bytes allowed\n     *\n     * @returns\n     */\n    export function maxContentSize(bytes: number): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n            const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n            const condition = bytes >= size;\n            return condition ? null : {\n                maxContentSize: {\n                    actualSize: size,\n                    maxSize: bytes\n                }\n            };\n        }\n    }\n}\n"],"names":["InjectionToken","Subject","coerceBooleanProperty","Component","MatFormFieldControl","NgControl","Optional","Self","FocusMonitor","ElementRef","Renderer2","Input","HostBinding","HostListener","Pipe","Inject","NgModule","FileValidator"],"mappings":"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"}
