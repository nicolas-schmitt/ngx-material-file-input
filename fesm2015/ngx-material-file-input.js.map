{"version":3,"file":"ngx-material-file-input.js.map","sources":["ng://ngx-material-file-input/lib/model/file-input-config.model.ts","ng://ngx-material-file-input/lib/model/file-input.model.ts","ng://ngx-material-file-input/lib/file-input/file-input.component.ts","ng://ngx-material-file-input/lib/pipe/byte-format.pipe.ts","ng://ngx-material-file-input/lib/material-file-input.module.ts","ng://ngx-material-file-input/lib/validator/file-validator.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[], private delimiter: string = ', ') {\n    this._fileNames = this._files.map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\nimport { FileInput } from '../model/file-input.model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  template: `<input #input id=\"md-input-file\" type=\"file\" [attr.multiple]=\"multiple? '' : null\">\n<span class=\"filename\">{{ fileNames }}</span>\n`,\n  styles: [`:host{display:inline-block}:host:not(.file-input-disabled){cursor:pointer}input{width:0;height:0;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename{display:inline-block}`],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy {\n  static nextId = 0;\n\n  stateChanges = new Subject<void>();\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled: boolean = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput.files);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled() {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get errorState() {\n    return this.ngControl.errors !== null && this.ngControl.touched;\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  writeValue(obj: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: any) {\n    const fileList = event.target.files;\n    const fileArray = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport {\n  FileInputConfig,\n  NGX_MAT_FILE_INPUT_CONFIG\n} from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [\n      this.unit,\n      'K' + B,\n      'M' + B,\n      'G' + B,\n      'T' + B,\n      'P' + B,\n      'E' + B,\n      'Z' + B,\n      'Y' + B\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n\n    /**\n     * Function to control content of files\n     *\n     * @param bytes max number of bytes allowed\n     *\n     * @returns\n     */\n    export function maxContentSize(bytes: number): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n            const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n            const condition = bytes >= size;\n            return condition ? null : {\n                maxContentSize: {\n                    actualSize: size,\n                    maxSize: bytes\n                }\n            };\n        }\n    }\n}\n"],"names":[],"mappings":"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"}
